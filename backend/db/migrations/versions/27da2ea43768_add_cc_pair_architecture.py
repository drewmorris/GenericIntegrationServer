"""add_cc_pair_architecture

Revision ID: 27da2ea43768
Revises: 20250819_01
Create Date: 2025-08-19 19:46:31.292627

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '27da2ea43768'
down_revision = '20250819_01'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('connector',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('input_type', sa.String(), nullable=False),
    sa.Column('connector_specific_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('refresh_freq', sa.Integer(), nullable=True),
    sa.Column('prune_freq', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=False),
    sa.Column('time_updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('apikey',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('hashed_api_key', sa.String(), nullable=False),
    sa.Column('api_key_display', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key_display'),
    sa.UniqueConstraint('hashed_api_key')
    )
    op.create_table('connectorcredentialpair',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('connector_id', sa.Integer(), nullable=False),
    sa.Column('credential_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('creator_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'PAUSED', 'DELETING', name='connectorcredentialpairstatus', native_enum=False), nullable=False),
    sa.Column('access_type', sa.Enum('PUBLIC', 'PRIVATE', 'SYNC', name='accesstype', native_enum=False), nullable=False),
    sa.Column('auto_sync_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_time_perm_sync', sa.DateTime(), nullable=True),
    sa.Column('last_successful_index_time', sa.DateTime(), nullable=True),
    sa.Column('last_pruned', sa.DateTime(), nullable=True),
    sa.Column('total_docs_indexed', sa.Integer(), nullable=False),
    sa.Column('in_repeated_error_state', sa.Boolean(), nullable=False),
    sa.Column('deletion_failure_message', sa.String(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=False),
    sa.Column('time_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['connector_id'], ['connector.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['credential_id'], ['credential.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('indexattempt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('connector_credential_pair_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('NOT_STARTED', 'IN_PROGRESS', 'SUCCESS', 'FAILED', 'CANCELED', name='indexingstatus', native_enum=False), nullable=False),
    sa.Column('from_beginning', sa.Boolean(), nullable=False),
    sa.Column('new_docs_indexed', sa.Integer(), nullable=False),
    sa.Column('total_docs_indexed', sa.Integer(), nullable=False),
    sa.Column('docs_removed_from_index', sa.Integer(), nullable=False),
    sa.Column('error_msg', sa.Text(), nullable=True),
    sa.Column('full_exception_trace', sa.Text(), nullable=True),
    sa.Column('total_batches', sa.Integer(), nullable=True),
    sa.Column('completed_batches', sa.Integer(), nullable=False),
    sa.Column('total_chunks', sa.Integer(), nullable=False),
    sa.Column('last_progress_time', sa.DateTime(), nullable=True),
    sa.Column('last_batches_completed_count', sa.Integer(), nullable=False),
    sa.Column('heartbeat_counter', sa.Integer(), nullable=False),
    sa.Column('last_heartbeat_value', sa.Integer(), nullable=False),
    sa.Column('last_heartbeat_time', sa.DateTime(), nullable=True),
    sa.Column('celery_task_id', sa.String(), nullable=True),
    sa.Column('cancellation_requested', sa.Boolean(), nullable=False),
    sa.Column('checkpoint_pointer', sa.String(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=False),
    sa.Column('time_started', sa.DateTime(), nullable=True),
    sa.Column('time_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['connector_credential_pair_id'], ['connectorcredentialpair.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('api_key')
    op.drop_constraint('user_email_key', 'user', type_='unique')
    op.drop_index('ix_user_email', table_name='user')
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.create_index('ix_user_email', 'user', ['email'], unique=False)
    op.create_unique_constraint('user_email_key', 'user', ['email'])
    op.create_table('api_key',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_api_key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('api_key_display', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='api_key_owner_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='api_key_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='api_key_pkey'),
    sa.UniqueConstraint('api_key_display', name='api_key_api_key_display_key'),
    sa.UniqueConstraint('hashed_api_key', name='api_key_hashed_api_key_key')
    )
    op.drop_table('indexattempt')
    op.drop_table('connectorcredentialpair')
    op.drop_table('apikey')
    op.drop_table('connector')
    # ### end Alembic commands ###
